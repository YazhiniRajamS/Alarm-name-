package com.example.demo.service;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Service
public class AlarmGeneratorService {

    private static final String INPUT_FILE = "/home/test/Downloads/File-fault/alarm_reply.xml";
    private static final Pattern idPattern = Pattern.compile("<(?:id|td)\\s*>\\s*(\\d+)\\s*</(?:id|td)>", Pattern.CASE_INSENSITIVE);

    public ResponseEntity<?> generateAlarmFile(String outputDir) {
        try {
            String content = new String(Files.readAllBytes(Paths.get(INPUT_FILE)));

            // Extract alarm IDs
            List<String> alarmIds = new ArrayList<>();
            Matcher matcher = idPattern.matcher(content);
            while (matcher.find()) {
                alarmIds.add(matcher.group(1));
            }

            // Generate timestamp
            String timestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
            String fileTimestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss"));

            // Create output XML
            StringBuilder xml = new StringBuilder();
            xml.append("<alarms timestamp=\"").append(timestamp).append("\">\n");
            for (String id : alarmIds) {
                xml.append("  <alarm><id>").append(id).append("</id></alarm>\n");
            }
            xml.append("</alarms>");

            // Output file creation
            Files.createDirectories(Paths.get(outputDir));
            String fileName = "alarm_" + fileTimestamp + ".xml";
            String fullPath = Paths.get(outputDir, fileName).toString();
            Files.write(Paths.get(fullPath), xml.toString().getBytes());

            // Prepare response
            Map<String, Object> response = new HashMap<>();
            response.put("alarmNames", alarmIds);
            response.put("filePath", fullPath);
            return ResponseEntity.ok(response);

        } catch (IOException e) {
            e.printStackTrace();
            return ResponseEntity.status(500).body("Error: " + e.getMessage());
        }
    }
}
